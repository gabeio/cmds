// Generated by CoffeeScript 1.6.1
(function() {
  var root;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  window.onload = function() {
    var debug, editor, page, s, try2;
    root.debug = debug = false;
    try {
      s = io.connect('http://' + window.location.hostname + '/cmds');
    } catch (error) {
      if (debug) {
        console.log(error);
      }
    }
    try2 = function() {
      if (typeof s !== 'undefined' && s.socket.connected !== true) {
        try {
          return root.s = s = io.connect('ws://' + window.location.hostname + '/cmds');
        } catch (error) {
          if (debug) {
            return console.log(error);
          }
        }
      }
    };
    setTimeout(try2(), 1000);
    page = window.location.pathname;
    if (page === "/") {
      editor = CodeMirror.fromTextArea(document.getElementById("code"), {
        mode: "htmlmixed",
        vimMode: true,
        lineNumbers: true,
        tabMode: "indent",
        matchBrackets: true,
        extraKeys: {
          "F11": function(cm) {
            if (cm.getOption("fullScreen")) {
              return cm.setOption("fullScreen", false);
            } else {
              return cm.setOption("fullScreen", true);
            }
          }
        },
        theme: 'monokai'
      });
      editor.focus();
      s.emit('index', {}, function(data) {
        var viewID;
        if (debug) {
          console.log(data);
        }
        root.vid = viewID = data;
        $('#viewID')[0].innerHTML = data;
        return $('#viewLINK')[0].href = '/view?v=' + data;
      });
      return editor.on("change", function() {
        return s.emit('update', {
          code: editor.getValue()
        }, function(data) {
          return data = null;
        });
      });
    } else if (page === "/view") {
      $('#view').on('submit', function(e) {
        e.preventDefault();
        return s.emit('view', {
          sid: $('#vid').val()
        }, function(data) {
          $('body').html('connected.');
          if (debug) {
            console.log(data);
          }
          return $('.begin').remove();
        });
      });
      return s.on('update', function(data) {
        $('body').html(data.code);
        if (debug) {
          return console.log(data.code);
        }
      });
    }
  };

}).call(this);
